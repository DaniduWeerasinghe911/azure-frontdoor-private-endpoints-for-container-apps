using './fd-endpoints.main.bicep'

param location = 'australiaeast'

param rgName = 'abc-shared-aue-fd-rg'
param profileName = 'abc-shared-aue-fd'
param endpoints = [
  {
    name: 'abc-prod'
    enabledState: 'Enabled'
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
  }
]
param originGroups = [
  {
    name: 'api-prod'
    loadBalancingSettings: {
      sampleSize: 5
      successfulSamplesRequired: 3
      additionalLatencyInMilliseconds: 240
    }
    healthProbeSettings: {
      probePath: '/'
      probeRequestType: 'HEAD'
      probeProtocol: 'Http'
      probeIntervalInSeconds: '240'
    }
    sessionAffinityState: 'Enabled'
  }
  
]
param origins = [
  {
    enabledState: 'Enabled'
    originGroupName: 'api-prod'
    originName: 'api'
    hostName: 'abc-prod-aue-apim.azure-api.net'
    httpPort: '80'
    httpsPort: '443'
    originHostHeader: 'abc-prod-aue-apim.azure-api.net'
    enforceCertificateNameCheck: true
    priority: '1'
    weight: '1000'
     sharedPrivateLinkResource: { // Optional.
      privateLink: {
        id: '/subscriptions/5xxxxxxxx/resourceGroups/appgw-frontdoor-rg/providers/Microsoft.App/managedEnvironments/managedEnvironment-appgwfrontdoorr-8671' // container app environment resource ID
      }
      privateLinkLocation: 'location'
      status: 'Approved'
      requestMessage: 'Please approve this request to allow Front Door to access the container app'
    }
  }
  
]
param secrets = []

param customDomains = []
param routes = [
  {
    routeName: 'api-prod'
    endpointName: 'abc-prod'
    originGroupName: 'api-prod'
    supportedProtocols: [
      'Http'
      'Https'
    ]
    patternsToMatch: ['/*']
    forwardingProtocol: 'HttpsOnly'
    customDomains: []
    ruleSets: []
    linkToDefaultDomain: 'Disabled'
    httpsRedirect: 'Enabled'
  }
 
]
param ruleSets = []
// param securityPolicies = []

param securityPolicies = []
